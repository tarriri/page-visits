version: "3.9"
services:
  property-ui:
    build:
      context: ./
      dockerfile: ./docker/property-ui/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - property-api
    networks:
      - page-visits

  property-api:
    build: 
      context: ./
      dockerfile: ./docker/property-api/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/db?user=application&password=foo123&searchpath=db&currentschema=db"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - page-visits

  event-collector-api:
    build:
      context: ./
      dockerfile: ./docker/event-collector-api/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres-event:54320/db?user=application&password=foo123&searchpath=db&currentschema=db"
    ports:
      - "8081:8081"
    depends_on:
      - postgres-event
    networks:
      - page-visits

  postgres:
    image: "postgres"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: application
      POSTGRES_PASSWORD: foo123
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d
    networks:
      - page-visits

  postgres-event:
    image: "postgres"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: application
      POSTGRES_PASSWORD: foo123
    ports:
      - "54320:54320"
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d
    command: -p 54320
    networks:
      - page-visits

  event-outbox-processor:
    build:
      context: ./
      dockerfile: ./docker/event-outbox-processor/Dockerfile
    environment:
      KAFKA_OFFSET_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - postgres-event
      - kafka
    ports:
      - "8083:8083"
    networks:
      - page-visits

  event-stats-processor:
    build:
      context: ./
      dockerfile: ./docker/event-stats-processor/Dockerfile
    environment:
      KAFKA_OFFSET_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - kafka
    ports:
      - "8084:8084"
    networks:
      - page-visits

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - page-visits

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSET_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "29092:29092"
      - "9092:9092"
    networks:
      - page-visits

  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        micronaut:
          server:
            port: 8082
        akhq:
          connections:
            local:
              properties:
                bootstrap.servers: "kafka:29092"
    ports:
      - "8082:8082"
    networks:
      - page-visits

networks:
  page-visits:
    name: page-visits

    